<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/aop
			    http://www.springframework.org/schema/aop/spring-aop.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd
			    http://www.springframework.org/schema/mvc
			    http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--整合Mybatis配置文件开始 -->
    <!--导入jdbc配置数据源文件 -->
     <context:property-placeholder location="classpath:jdbc/jdbc.properties"></context:property-placeholder>

    <!--配置c3p0数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--配置SqlSessionFactory工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置Mybatis的主配置文件-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!--配置数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!--配置Mapper映射文件 -->
        <property name="mapperLocations" >
            <list>
                <value>classpath*:mybatis/*Mapper.xml</value>
            </list>
        </property>
    </bean>

    <!--扫描含有dao接口的包并交由Spring容器创建管理 -->
    <bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.itpzy.crowdfunding.manager.dao,com.itpzy.crowdfunding.potal.dao"></property>
    </bean>

    <!--线程安全的SqlSession -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="SIMPLE"></constructor-arg>
    </bean>

    <!--整合Mybatis配置文件结束 -->

    <!--整合Spring配置文件开始 -->
    <!--配置要扫描的包，排除Controller注解的类 -->
    <context:component-scan base-package="com.itpzy.crowdfunding.*" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>

    <!--配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--配置事务通知类 -->
    <tx:advice id="tx-advice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <!--配置事务通知和切入点对应关系 -->
    <aop:config>
        <!--配置切入点类型 -->
        <aop:pointcut id="pointcut1" expression="execution(* com.itpzy.crowdfunding..*ServiceImpl.*(..))"></aop:pointcut>
        <!--配置切面 -->
        <aop:advisor advice-ref="tx-advice" pointcut-ref="pointcut1"></aop:advisor>
    </aop:config>
    <!--整合Spring配置文件结束 -->






</beans>